version: '3'

services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper-1
  kafka-broker-2:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9093,PLAINTEXT_INTERNAL://localhost:19093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper-1
  kafka-broker-3:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper-1:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9094,PLAINTEXT_INTERNAL://localhost:19094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper-1
    
  cassandra:
    ports:
      - "9042:9042"
    build:
      dockerfile: ./cassandra/Dockerfile
    healthcheck:
      test: ["CMD-SHELL", "cqlsh --execute 'DESCRIBE TABLES;' | grep jobs_communes"]
      interval: 10s
      timeout: 5s
      retries: 5  
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3

  cassandra-driver:
    build:
      dockerfile: ./cassandra_driver/Dockerfile

  api-pole-emploi:
    build:
      dockerfile: ./api_pole_emploi/Dockerfile
    depends_on:
      cassandra:
        condition: service_healthy

  frontend:
    image: node:latest
    ports:
      - "3001:3001"
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: bash -c "npm install && npm start"
    depends_on:
      - cassandra

  kafka-consumer-1:
    build:
      dockerfile: ./kafka_consumer_1/Dockerfile
    depends_on:
      - api-pole-emploi
    environment:
      - BOOTSTRAP_SERVERS=kafka-broker-1:9092
      - TOPIC_NAME=jobs
      - GROUP_ID = kafka-consumer-1
      - CASSANDRA_HOSTS=cassandra
      - KEYSPACE=offresEmploi

  kafka-consumer-2:
    build:
      dockerfile: ./kafka_consumer_2/Dockerfile
    depends_on:
      - api-pole-emploi
    environment:
      - BOOTSTRAP_SERVERS=kafka-broker-1:9092
      - TOPIC_NAME=jobs
      - GROUP_ID = kafka-consumer-2
      - CASSANDRA_HOSTS=cassandra
      - KEYSPACE=offresEmploi


